<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Repository.Application</name>
    </assembly>
    <members>
        <member name="T:FanClass.Infrastructures.Repository.Cache">
            <summary>
            缓存接口实现类
            </summary>
        </member>
        <member name="F:FanClass.Infrastructures.Repository.Cache._connetRedisString">
            <summary>
            Redis连接Key
            </summary>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Cache.#ctor(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
             <summary>
            构造函数
             </summary>
             <param name="configuration"></param>
             <param name="redisStoreKey"></param>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Cache.GetKey(FanClass.Infrastructures.Repository.CacheKeyType,System.String)">
            <summary>
            获取Key
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Cache.TryGetValue(System.String,System.Int32)">
            <summary>
            在缓存中通过Key获取对应值
            </summary>
            <param name="key"></param>
            <param name="defaultDb"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Cache.TryPut(System.String,System.String,System.TimeSpan,System.Int32)">
            <summary>
            将指定key与value插入到缓存中
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expired"></param>
            <param name="defaultDb"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Cache.TryDelete(System.String,System.Int32)">
            <summary>
            缓存中删除指定Key的元素
            </summary>
            <param name="key"></param>
            <param name="defaultDb"></param>
            <returns></returns>
        </member>
        <member name="T:FanClass.Infrastructures.Repository.ICache">
            <summary>
            缓存接口
            </summary>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.ICache.GetKey(FanClass.Infrastructures.Repository.CacheKeyType,System.String)">
            <summary>
            获取在缓存中指定类型Key名
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.ICache.TryGetValue(System.String,System.Int32)">
            <summary>
            缓存中查询
            </summary>
            <param name="key"></param>
            <param name="defaultDb"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.ICache.TryPut(System.String,System.String,System.TimeSpan,System.Int32)">
            <summary>
            插入缓存
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="time"></param>
            <param name="defaultDb"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.ICache.TryDelete(System.String,System.Int32)">
            <summary>
            删除缓存中指定Key的对应值
            </summary>
            <param name="key"></param>
            <param name="defaultDb"></param>
            <returns></returns>
        </member>
        <member name="T:FanClass.Infrastructures.Repository.CacheKeyType">
            <summary>
            缓存中Key类型
            </summary>
        </member>
        <member name="F:FanClass.Infrastructures.Repository.CacheKeyType.UserInfo">
            <summary>
            用户
            </summary>
        </member>
        <member name="T:FanClass.Infrastructures.Repository.IRepository`1">
            <summary>
            仓储接口
            </summary>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.IRepository`1.TryCacheGet(System.Int64,FanClass.Infrastructures.Repository.CacheKeyType)">
            <summary>
            尝试在Redis中通过主键获取，如果Redis中没有则去MySql中查询主键获取
            </summary>
            <param name="id"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.IRepository`1.Get(System.Int64)">
            <summary>
            在数据库中获取
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.IRepository`1.Gets(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            根据指定参数筛选MySql中数据
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.IRepository`1.Insert(`0)">
            <summary>
            插入到数据库中
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.IRepository`1.TryCacheInsert(`0,System.TimeSpan,FanClass.Infrastructures.Repository.CacheKeyType)">
            <summary>
            将数据T插入到数据库中，并写入缓存，过期时间为expired
            </summary>
            <param name="entity"></param>
            <param name="expired"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.IRepository`1.Delete(System.Int64)">
            <summary>
            删除指定主键的单个实体
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.IRepository`1.Deletes(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            删除满足parameters的所有实体
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.IRepository`1.Update(`0)">
            <summary>
            更新单个实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.IRepository`1.Updates(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            批量更新多个实体
            </summary>
            <param name="selections"></param>
            <param name="updates"></param>
            <returns></returns>
        </member>
        <member name="T:FanClass.Infrastructures.Repository.Repository`1">
            <summary>
            仓储接口基类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:FanClass.Infrastructures.Repository.Repository`1._tableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:FanClass.Infrastructures.Repository.Repository`1._connetMySqlString">
            <summary>
            连接MySql字符串
            </summary>
        </member>
        <member name="F:FanClass.Infrastructures.Repository.Repository`1._cacheUsed">
            <summary>
            是否使用RedisCache
            </summary>
        </member>
        <member name="F:FanClass.Infrastructures.Repository.Repository`1._connetRedisString">
             <summary>
            连接Redis字符串
             </summary>
        </member>
        <member name="F:FanClass.Infrastructures.Repository.Repository`1._cache">
            <summary>
            缓存
            </summary>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Repository`1.#ctor(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="configuration"></param>
            <param name="tableName"></param>
            <param name="dbStoreKey"></param>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Repository`1.#ctor(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String,System.String)">
            <summary>
            具有缓存的构造函数
            </summary>
            <param name="configuration"></param>
            <param name="tableName"></param>
            <param name="dbStoreKey"></param>
            <param name="redisStoreKey"></param>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Repository`1.TryCacheGet(System.Int64,FanClass.Infrastructures.Repository.CacheKeyType)">
            <summary>
            尝试在Redis中通过主键获取，如果Redis中没有则去数据库中查询主键获取
            </summary>
            <param name="id"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Repository`1.Get(System.Int64)">
            <summary>
            主键在数据库中获取
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Repository`1.Gets(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            通过指定参数筛选数据
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Repository`1.Insert(`0)">
            <summary>
            插入单个实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Repository`1.TryCacheInsert(`0,System.TimeSpan,FanClass.Infrastructures.Repository.CacheKeyType)">
            <summary>
            将数据T插入到数据库中，并写入缓存，过期时间为expired
            </summary>
            <param name="entity"></param>
            <param name="expired"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Repository`1.Delete(System.Int64)">
            <summary>
            删除对应主键的唯一实体
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Repository`1.Deletes(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            删除复合参数的所有实体
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Repository`1.Update(`0)">
            <summary>
            更新单个实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:FanClass.Infrastructures.Repository.Repository`1.Updates(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            批量更新多个实体
            </summary>
            <param name="selections"></param>
            <param name="updates"></param>
            <returns></returns>
        </member>
    </members>
</doc>
